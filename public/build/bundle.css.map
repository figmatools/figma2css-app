{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../TreeView.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import baseUrl from './base-url.js'\n\timport TreeView from './TreeView.svelte';\n\timport {onMount} from 'svelte';\n\timport CSSGenerator from \"./CSSGenerator.svelte\";\n\n\tlet result = ''\n\tlet figmaToken = ''\n\tlet fileId = ''\n\tlet nodeIds = [];\n\tlet depth = '';\n\tlet treeLoading = false;\n\n  console.log('baseUrl: ', baseUrl)\n\n\tfunction handleSubmit() {\n\t\ttreeLoading = true;\n\t\tresult = '';\n\t\tlet ajax = new XMLHttpRequest();\n\t\tajax.open(\"GET\", `${baseUrl}/data?fileId=${fileId}&figmaToken=${figmaToken}`, true);\n\t\tajax.send();\n\t\tajax.onreadystatechange = () => {\n\t\t\tif (ajax.readyState === 4 && ajax.status === 200) {\n\t\t\t\tresult = JSON.parse(ajax.responseText);\n\t\t\t\ttreeLoading = false;\n\t\t\t} else if (ajax.readyState === 4 && ajax.status !== 200) {\n\t\t\t\tresult = {msg: \"Request Error! Please check file ID and access token :)\", type: \"ERROR\"};\n\t\t\t\ttreeLoading = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst getSavedCredentials = () => {\n\t\tlet ajax = new XMLHttpRequest();\n\t\tajax.open(\"GET\", `${baseUrl}/cached-credentials`, true);\n\t\tajax.send();\n\t\tajax.onreadystatechange = () => {\n\t\t\tif (ajax.readyState === 4 && ajax.status === 200) {\n\t\t\t\tlet response = JSON.parse(ajax.responseText);\n\t\t\t\tif (response.id) {\n\t\t\t\t\tfileId = response.id;\n\t\t\t\t}\n\t\t\t\tif (response.token) {\n\t\t\t\t\tfigmaToken = response.token;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tonMount(() => {\n    getSavedCredentials();\n\t})\n</script>\n\n<main>\n\t<div class=\"container\">\n\t\t<header>\n\t\t\t<div class=\"title\">Figma2CSS</div>\n\t\t\t<div class=\"subtitle\">Generate CSS from Figma Layouts</div>\n\t\t</header>\n\t\t<main>\n\t\t\t<form class=\"auth-form\" id=\"generateForm\" on:submit|preventDefault={handleSubmit}>\n\t\t\t\t<div class=\"label-input-container\">\n\t\t\t\t\t<label for=\"figmaToken\">Figma Access Token*</label>\n\t\t\t\t\t<input id=\"figmaToken\" name=\"figmaToken\" placeholder=\"Access Token\" bind:value={figmaToken} required>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"label-input-container\">\n\t\t\t\t\t<label for=\"fileId\">File ID*</label>\n\t\t\t\t\t<input id=\"fileId\" name=\"fileId\" placeholder=\"File ID\" bind:value={fileId} required>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"label-input-container smallInput\">\n\t\t\t\t\t<label for=\"nodeIds\">Node IDs</label>\n\t\t\t\t\t<input id=\"nodeIds\" name=\"nodeIds\" placeholder=\"Comma Separated IDs\" bind:value={nodeIds}>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"label-input-container smallInput\">\n\t\t\t\t\t<label for=\"depth\">Depth</label>\n\t\t\t\t\t<input type=\"number\" id=\"depth\" name=\"depth\" placeholder=\"Depth\" bind:value={depth}>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" id=\"generateButton\" class=\"btn-primary\">Generate!</button>\n\t\t\t</form>\n\t\t\t<TreeView treeData={result} requestLoading={treeLoading}/>\n\t\t\t<CSSGenerator/>\n\t\t</main>\n\t\t<footer>\n\n\t\t</footer>\n\t</div>\n</main>\n\n<style>\n\thtml {\n\t\tbox-sizing: border-box;\n\t\tfont-size: 16px;\n\t\tbackground-color: #1b1b2f;\n\t}\n\n\t*, *:before, *:after {\n\t\tfont-family: 'Quicksand', 'Source Sans Pro', -apple-system, BlinkMacSystemFont,\n\t\t'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n\t\tbox-sizing: inherit;\n\t}\n\n\tbody, h1, h2, h3, h4, h5, h6, p, ol, ul {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tfont-weight: normal;\n\t}\n\n\tinput {\n\t\tbackground-color: transparent;\n\t}\n\n\tol, ul {\n\t\tlist-style: none;\n\t}\n\n\timg {\n\t\tmax-width: 100%;\n\t\theight: auto;\n\t}\n\n\t/* END CSS RESET */\n\n\t.container {\n\t\tmargin: 0 auto;\n\t\tmin-height: 100vh;\n\t\tmax-width: 1280px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\t\ttext-align: center;\n\t}\n\n\t.title {\n\t\tfont-family: 'Quicksand', 'Source Sans Pro', -apple-system, BlinkMacSystemFont,\n\t\t'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n\t\tdisplay: block;\n\t\tfont-weight: 300;\n\t\tfont-size: 100px;\n\t\tcolor: var(--main-color);\n\t\tletter-spacing: 1px;\n\t}\n\n\t.subtitle {\n\t\tfont-weight: 300;\n\t\tfont-size: 42px;\n\t\tcolor: var(--secondary-color);\n\t\tword-spacing: 5px;\n\t\tpadding-bottom: 15px;\n\t}\n\n\tmain {\n\t\twidth: 100%;\n\t\tcolor: rgba(255, 255, 255, 0.61);\n\t}\n\n\t.auth-form {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\tflex-wrap: wrap;\n\t\talign-items: center;\n\t\talign-content: center;\n\t}\n\n\t.label-input-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 50%;\n\t\tpadding: 5px 30px;\n\t}\n\n\t.label-input-container input {\n\t\tborder: 0;\n\t\tborder-bottom: 1px solid var(--light-grey);\n\t\tcolor: var(--font-black);\n\t\toutline: none;\n\t\tpadding: 5px 10px;\n\t\tfont-size: 16px;\n\t}\n\n\t.label-input-container label {\n\t\tmargin-bottom: 5px;\n\t\tfont-size: 20px;\n\t}\n\n\t.auth-form button {\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tpadding: 14px 24px;\n\t\tmargin-bottom: 0;\n\t\tdisplay: inline-block;\n\t\ttext-decoration: none;\n\t\ttext-align: center;\n\t\twhite-space: nowrap;\n\t\tvertical-align: middle;\n\t\t-ms-touch-action: manipulation;\n\t\ttouch-action: manipulation;\n\t\tcursor: pointer;\n\t\t-webkit-user-select: none;\n\t\t-moz-user-select: none;\n\t\t-ms-user-select: none;\n\t\tuser-select: none;\n\t\tborder: 1px solid transparent;\n\t\tbackground-color: #28a745;\n\t\tcolor: white;\n\t\tborder-radius: 5px;\n\t\ttransition: all 0.6s ease;\n\t\tmargin-top: 20px;\n\t}\n\n\t.auth-form button:hover {\n\t\tbackground-color: #218838;\n\t\tborder-color: #1e7e34;\n\t}\n\n\t.auth-form button:focus {\n\t\tbox-shadow: 0 0 0 0.2rem rgba(40,167,69,.5);\n\t}\n\n\t.smallInput {\n\n\t}\n\n\n\tinput:-webkit-autofill,\n\tinput:-webkit-autofill:hover,\n\tinput:-webkit-autofill:focus,\n\ttextarea:-webkit-autofill,\n\ttextarea:-webkit-autofill:hover,\n\ttextarea:-webkit-autofill:focus,\n\tselect:-webkit-autofill,\n\tselect:-webkit-autofill:hover,\n\tselect:-webkit-autofill:focus {\n\t\tborder-bottom: 1px solid var(--light-grey);\n\t\t-webkit-text-fill-color: var(--light-grey);\n\t\t-webkit-box-shadow: transparent;\n\t\ttransition: background-color 5000s ease-in-out 0s;\n\t}\n</style>\n",
    "<script>\n  export let treeData = '';\n  export let requestLoading = '';\n  import { afterUpdate, beforeUpdate, onMount } from 'svelte';\n  let tree = '';\n  let selectedNodes = [];\n\n  let defaultLineHeight = 31; // in px\n  let defaultCollapseTransitionTime = 500; // in milliseconds\n\n  const generateTreeview = (data) => {\n    console.log('treeData: ', data)\n    tree = '';\n    let treeString = `<div id=\"tree\"><div class=\"treeTooltip\">Click on elements to see their children.\n                      <br>Click on the input beside them to select for CSS generation.</div>\n                      <button type=\"button\" id=\"generateCSS\" class=\"btn-primary\">Get CSS</button>`;\n    if(!data) return\n\n    if(data.type === \"ERROR\") {\n      tree = data.msg;\n      return;\n    }\n    let nodes = data.nodes;\n    for(let node in nodes) {\n      let nodeRoot = nodes[node].document;\n      let children = nodeRoot.children;\n      if(children) {\n          treeString += `<ul>`;\n          for(let child of children) {\n              treeString += generateTreeviewRecursive(child);\n          }\n          treeString += `</ul>`;\n      }\n      treeString += `</div>`;\n      tree = treeString;\n    }\n  }\n\n  const generateTreeviewRecursive = (child) => {\n    // TODO: only add accordionControl if has children;\n    // TODO: accordion-control should be a downward arrow, add span before for child.name;\n    // TODO: selectable childs for CSS generation;\n    let children = child.children;\n    let treeString = `<li class=\"${children ? 'isParent' : ''}\" data-childrenAmmount=\"${children ? children.length.toString() : '0'}\" data-child-id=\"${child.id}\" data-child-type=\"${child.type}\">\n                        <span class=\"accordionControl\">${child.name}</span>\n                        <input type=checkbox class=\"selectionControl\">\n                        ${children ? \"<input type=checkbox class='childSelectionControl'>\" : \"\"}`\n    if(children) {\n        treeString += `<ul>`;\n        for(let child of children) {\n          treeString += generateTreeviewRecursive(child);\n        }\n      treeString += `</ul>`;\n    }\n    treeString += `</li>`;\n    return treeString;\n  }\n\n  const propagateLineHeightAdjustment = (element, isExpanding = true, offset = 0) => {\n    let childrenAmmount = element.dataset.childrenammount;\n    let listItemChildrenContainer = element.querySelector(\"ul\");\n    let heightAdjustment = childrenAmmount * defaultLineHeight;\n    let containerList = element.parentNode.closest(\"li\");\n    if(containerList && containerList.classList.contains(\"isParent\")) {\n      propagateLineHeightAdjustment(containerList, isExpanding, heightAdjustment);\n    }\n    if(isExpanding) {\n      listItemChildrenContainer.style.maxHeight = (listItemChildrenContainer.offsetHeight + heightAdjustment + offset) + \"px\";\n    }\n  }\n\n  const propagateCollapse = (element) => {\n    let openChildren = element.querySelectorAll(\"ul.open\");\n    for(let child of openChildren) {\n      child.classList.remove(\"open\");\n      child.style.maxHeight = \"0px\";\n    }\n  }\n\n  const toggleChildrenDisplay = (element) => {\n    let clickedListItem = element.parentNode;\n    let listItemChildrenContainer = clickedListItem.querySelector(\"ul\");\n    let listItemChildrenAmount = clickedListItem.dataset.childrenammount;\n    if(listItemChildrenContainer) {\n      if (listItemChildrenContainer.classList.toggle(\"open\")) {\n        listItemChildrenContainer.style.maxHeight = (defaultLineHeight * listItemChildrenAmount) + \"px\";\n        propagateLineHeightAdjustment(clickedListItem, true);\n      } else {\n        listItemChildrenContainer.style.maxHeight = \"0px\";\n        propagateLineHeightAdjustment(clickedListItem, false);\n        propagateCollapse(clickedListItem);\n      }\n    }\n  };\n\n  const propagateSelectedCount = (element, value) =>{\n    let ul = element.closest('ul');\n    if(ul){\n      let span = ul.parentElement.querySelector(\":scope > span\");\n      if(span){\n        if(!span.dataset.selectedCount){\n          span.dataset.selectedCount = \"0\";\n        }\n        span.dataset.selectedCount = parseInt(span.dataset.selectedCount)+value;\n        propagateSelectedCount(ul.parentElement,value)\n      }\n    }\n  };\n\n  const selectElement = (element) =>{\n    selectedNodes.push(element.parentNode.dataset.childId);\n  };\n\n  const deselectElement = (element) =>{\n    let id = element.parentNode.dataset.childId;\n    let index = selectedNodes.indexOf(id);\n    selectedNodes.splice(index, 1);\n  };\n\n  const toggleAllChildren = (element) => {\n    let ul = element.parentNode.querySelector(\":scope > ul\");\n    let liList = ul.children;\n    let children;\n    for(let i = 0; i < liList.length; i++){\n      children = liList[i].children;\n      for (let j = 0; j < children.length; j++){\n        if (children[j].className == 'selectionControl'){\n          toggleElementSelected(children[j])\n        }\n        if (children[j].className == 'childSelectionControl'){\n          children[j].checked = !children[j].checked;\n          toggleAllChildren(children[j])\n        }\n      }\n    }\n  };\n\n  const toggleElementSelected = (element) => {\n    let span = element.closest('ul').parentElement.querySelector(\":scope > span\");\n    if(span) {\n      if (!span.dataset.selectedCount) {\n        span.dataset.selectedCount = \"0\";\n      }\n    }\n    if (element.parentNode.dataset.selected == 'true') {\n      element.parentNode.dataset.selected = ('false');\n      element.checked = false;\n      deselectElement(element);\n      propagateSelectedCount(element, -1)\n    } else {\n      element.parentNode.dataset.selected = ('true');\n      element.checked = true;\n      selectElement(element);\n      propagateSelectedCount(element, 1)\n    }\n  };\n\n  const defineLineWidth = () => {\n    let lines = document.querySelectorAll(\"span.accordionControl\");\n    let largestLineWidth = 0;\n    let largestLine;\n    for(let line of lines) {\n      if(line.offsetWidth > largestLineWidth) {\n        largestLine = line;\n        largestLineWidth = line.offsetWidth;\n      }\n    }\n    for(let line of lines) {\n      line.style.width = largestLineWidth + \"px\";\n      line.style.display = \"inline-block\";\n    }\n  }\n\n  const generateCSS = () => {\n    console.log(\"generating\");\n  }\n\n  afterUpdate(() => {\n    let accordionControls = document.querySelectorAll(\".accordionControl\");\n    let selectionControls = document.querySelectorAll(\".selectionControl\");\n    let childSelectionControl = document.querySelectorAll('.childSelectionControl');\n    for(let control of accordionControls) {\n      control.addEventListener(\"click\", (evt) => {\n        toggleChildrenDisplay(evt.target);\n      })\n    }\n    for(let control of selectionControls) {\n      control.addEventListener(\"click\", (evt) => {\n        toggleElementSelected(evt.target);\n      })\n    }\n\n    if(document.querySelector(\"#generateCSS\")) {\n      document.querySelector(\"#generateCSS\").addEventListener('click', generateCSS);\n    }\n\n    for(let control of childSelectionControl){\n      control.addEventListener(\"click\", (evt) => {\n        toggleAllChildren(evt.target);\n      })\n    }\n\n    defineLineWidth();\n  });\n\n  beforeUpdate(() =>{\n    let accordionControls = document.querySelectorAll(\".accordionControl\");\n    let selectionControls = document.querySelectorAll(\".selectionControl\");\n    let childSelectionControl = document.querySelectorAll('.childSelectionControl');\n    for(let control of selectionControls) {\n      control.removeEventListener(\"click\");\n    }\n    for(let control of accordionControls) {\n      control.removeEventListener(\"click\");\n    }\n    for(let control of childSelectionControl) {\n      control.removeEventListener(\"click\");\n    }\n    if(document.querySelector(\"#generateCSS\")) {\n      document.querySelector(\"#generateCSS\").removeEventListener('click');\n    }\n  });\n\n  $: generateTreeview(treeData);\n</script>\n\n<div id=\"treeview\">\n  {@html tree}\n  <div class=\"lds-ring\" class:active={requestLoading}><div></div><div></div><div></div><div></div></div>\n</div>\n\n<style>\n  #treeview {\n    position: relative;\n  }\n\n  .lds-ring:not(.active) {\n    opacity: 0;\n    transition: opacity 0.5s ease;\n  }\n  .lds-ring {\n    opacity: 1;\n    transition: opacity 0.5s ease;\n    display: inline-block;\n    position: fixed;\n    top: 50%;\n    left: calc(50% - 40px);\n    width: 80px;\n    height: 80px;\n  }\n  .lds-ring div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border: 8px solid #fff;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #fff transparent transparent transparent;\n  }\n  .lds-ring div:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n  .lds-ring div:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n  .lds-ring div:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n  @keyframes lds-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}